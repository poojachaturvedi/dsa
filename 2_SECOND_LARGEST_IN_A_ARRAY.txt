using the sort function
	int print2largest(int arr[], int n) {
	    // code here
	    sort(arr,arr+n);
	    return arr[n-2];
	}

using the loop
	int print2largest(int arr[], int n) {
	    // code here
	
	   int second_max=-1;
	   if(n==0 || n==1){
	       return -1;
	   }
	    int max=INT_MIN;
      for(int i=0;i<n;i++){
          if(arr[i]>max)
          max=arr[i];
          
      }   
	   for(int i=0;i<n;i++){
	       
	       if(arr[i]>second_max && arr[i]<max){
	           second_max=arr[i];
	       }
	   }
	return second_max;
	    
	}


problem encountered: the solution with min as INT_MIN didn't word
edge case:if there is zero or one element there will be no second laegest element in the array
